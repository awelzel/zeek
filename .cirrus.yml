env:
  IMAGE_REPO: arnewelzel

docker_builder:
  name: build_container_images_arm64
  env:
    CIRRUS_ARCH: arm64
    CIRRUS_LOG_TIMESTAMP: true
    CONFFLAGS: --generator=Ninja --build-type=Release
  set_image_tag_script: echo "IMAGE_TAG=${IMAGE_REPO}/zeek-multiarch:${CIRRUS_ARCH}" >> $CIRRUS_ENV
  build_script:
    - env
    - git submodule update --init --recursive
    - set -x; cd docker && docker build -f Dockerfile --tag ${IMAGE_TAG} ..
    - set -x; docker save $IMAGE_TAG | zstd > image.zst
    - ls -lha image.zst
    - sha256sum image.zst
    - curl -v -X POST --data-binary @image.zst http://$CIRRUS_HTTP_CACHE_HOST/${CIRRUS_BUILD_ID}-image-${CIRRUS_ARCH}

docker_builder:
  name: build_container_images_amd64
  env:
    CIRRUS_LOG_TIMESTAMP: true
    CONFFLAGS: --generator=Ninja --build-type=Release
  set_image_tag_script: echo "IMAGE_TAG=${IMAGE_REPO}/zeek-multiarch:${CIRRUS_ARCH}" >> $CIRRUS_ENV
  build_script:
    - env
    - git submodule update --init --recursive
    - set -x; cd docker && docker build -f Dockerfile --tag ${IMAGE_TAG} ..
    - set -x; docker save $IMAGE_TAG | zstd > image.zst
    - ls -lha image.zst
    - sha256sum image.zst
    - curl -v -X POST --data-binary @image.zst http://$CIRRUS_HTTP_CACHE_HOST/${CIRRUS_BUILD_ID}-image-${CIRRUS_ARCH}


docker_builder:
  # TODO: Only on master and v.* branches
  name: docker_manifest_create
  env:
    CIRRUS_LOG_TIMESTAMP: true
    DOCKER_USERNAME: arnewelzel
    DOCKER_PASSWORD: ENCRYPTED[f24e38bbaf3467608d66cb62d10e695bfec36b4dacb3d805eafe4c37a20b2fa4080bdd4a8d03f5e796952e3770370f1d]
    IMAGE_REPO: arnewelzel
  login_script: docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  set_image_tag_script: |
    echo "IMAGE_NAME=zeek" >> $CIRRUS_ENV
    # If we have a CIRRUS_TAG, use that for the tags to push the architectures,
    # otherwise use latest. Basically we push the arch images as zeek/zeek:<arch>-<latest|v1.2.3>
    # and then create a manifest of the form zeek/zeek:$(cat VERSION).
    if [ -n "${CIRRUS_TAG}" ]; then
      echo "IMAGE_TAG=${CIRRUS_TAG}" >> $CIRRUS_ENV
    else
      echo "IMAGE_TAG=latest" >> $CIRRUS_ENV
    fi
    echo "MANIFEST_TAG=$(cat VERSION)" >> $CIRRUS_ENV
  build_script:
    # Fetch and load the images
    - set -x; curl -v -O http://$CIRRUS_HTTP_CACHE_HOST/${CIRRUS_BUILD_ID}-image-arm64
    - set -x; curl -v -O http://$CIRRUS_HTTP_CACHE_HOST/${CIRRUS_BUILD_ID}-image-amd64
    - ls -lha *-image-{arm,amd}64
    - sha256sum *-image-{arm,amd}64
    - set -x; zstd -d < ${CIRRUS_BUILD_ID}-image-arm64 | docker load
    - set -x; zstd -d < ${CIRRUS_BUILD_ID}-image-amd64 | docker load

    - set -x; docker tag ${IMAGE_REPO}/zeek-multiarch:arm64 ${IMAGE_REPO}/zeek-multiarch:arm64-${IMAGE_TAG}
    - set -x; docker tag ${IMAGE_REPO}/zeek-multiarch:amd64 ${IMAGE_REPO}/zeek-multiarch:amd64-${IMAGE_TAG}
    - set -x; docker push ${IMAGE_REPO}/zeek-multiarch:arm64-${IMAGE_TAG}
    - set -x; docker push ${IMAGE_REPO}/zeek-multiarch:amd64-${IMAGE_TAG}

    - set -x; docker manifest create ${IMAGE_REPO}/$IMAGE_NAME:${MANIFEST_TAG} ${IMAGE_REPO}/zeek-multiarch:arm64-${IMAGE_TAG} ${IMAGE_REPO}/zeek-multiarch:amd64-${IMAGE_TAG}
    - set -x; docker manifest push ${IMAGE_REPO}/$IMAGE_NAME:${MANIFEST_TAG}
  depends_on:
    - build_container_images_arm64
    - build_container_images_amd64
